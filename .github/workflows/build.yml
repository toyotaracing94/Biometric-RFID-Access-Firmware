name: PlatformIO CI Build and Release

on:
  push:
    branches: [main]

  release:
    types: [published]

permissions:
  packages: write
  pull-requests: write
  contents: write
  issues: write
  id-token: write
  pages: write

jobs:
  build-esp-32:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Enable caching
        uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio-esp32dev

      - name: Setup Python
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.10"

      - name: Install PlatformIO and ESP-IDF Tool
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio esptool

      # TODO : Run Test Step

      - name: Run Manual Versioning
        id: runVersion
        run: |
          chmod +x ./scripts/determine_version.sh
          ./scripts/determine_version.sh
        shell: bash

      - name: Save Build info
        uses: "DamianReeves/write-file-action@master"
        with:
          path: src/versionInfo.h
          write-mode: overwrite
          contents: |
            // #####################################################################################################
            // ###    This file is generated by Build and Continuous Integration scripts Github Action Runner    ###
            // ###                         .github/workflows/build.yml for CI environment                        ###
            // ###                    Changes will be overwritten on the next build                              ###
            // #####################################################################################################
            #ifndef VERSION_INFO_H
            #define VERSION_INFO_H

            #define CURRENT_FIRMWARE_VERSION GIT_REV
            #define LAST_BUILD_FIRMWARE_VERSION "${{ env.buildversion }}"
            #define LAST_FIRMWARE_VERSION_FILENAME "${{ env.buildversionfilename }}"
            #define LAST_COMMIT_HASH "${{ env.commithash }}"
            #define LAST_BUILD_TIMESTAMP "${{ env.buildtimestamp }}"

            #endif

      - name: Bump versionInfo.h
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add src/versionInfo.h
          git commit -m "Bump versionInfo.h to ${{ env.buildversion }} [skip ci]" || exit 0
          git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}

      - name: Verify Commit
        run: |
          echo "GitHub SHA (from context): ${{ github.sha }}"
          LATEST_COMMIT_SHA=$(git rev-parse HEAD)
          echo "LATEST_COMMIT_SHA=$LATEST_COMMIT_SHA" >> $GITHUB_ENV
          git log -n 1
      
      - name: Building
        run: |
          chmod +x ./scripts/build.sh
          ./scripts/build.sh
        shell: bash

      - name: Rename Files
        run: |
          mv ./out/biometric-esp32-group-c.zip ./out/biometric-esp32-group-c-${{ env.buildversion }}.zip
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "v${{ env.buildversion }}"
          tag_name: ${{ env.buildversion }}
          draft: false
          prerelease: false
          files: ./out/biometric-esp32-group-c-${{ env.buildversion }}.zip
          target_commitish: ${{ env.LATEST_COMMIT_SHA }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}